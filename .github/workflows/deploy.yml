name: Backend Deploy To EC2

on:
  push:
    branches:
      - main

jobs:
  Deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Github Repository Code Load
        uses: actions/checkout@v4

      - name: JDK 17 버전 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: application.yml create
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application-prod.yml

      - name: test and build
        run: ./gradlew clean build

      - name: AWS credentials setting (for Access AWS Resource)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: login ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker Image create
        run: docker build -t spoton-server .

      - name: Docker image add tag
        run: docker tag spoton-server ${{ steps.login-ecr.outputs.registry }}/spoton-server:latest

      - name: Docker Image Push to ECR
        run: docker push ${{ steps.login-ecr.outputs.registry }}/spoton-server:latest

      - name: SSH - EC2 access
        uses: appleboy/ssh-action@v1.0.3
        with:
          username: ubuntu
          host: ${{ secrets.EC2_HOST }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            echo "Changing directory to 'spoton/'..."
            
            cd spoton/ || { echo "Error: Failed to change directory to 'spoton/'. Exiting..."; exit 1; }
            
            echo "Stopping and removing containers..."
            if ! docker-compose down -v; then
              echo "Warning: Failed to stop containers or remove volumes. Continuing..."
            fi
            
            echo "Removing old image 'spoton-server'..."
            if ! docker rmi spoton-server; then
              echo "Warning: Image 'spoton-server' does not exist or failed to delete. Continuing..."
            fi
            
            echo "Pulling the latest image from ECR..."
            if ! docker pull ${{ steps.login-ecr.outputs.registry }}/spoton-server:latest; then
              echo "Error: Failed to pull the latest image from ECR. Exiting..."
            exit 1
            fi
            
            echo "Starting containers with Docker Compose..."
            if ! docker-compose up -d; then
              echo "Error: Failed to start containers. Exiting..."
            exit 1
            fi